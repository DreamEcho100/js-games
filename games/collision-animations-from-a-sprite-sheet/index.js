import M from"../../libs/core/dom.js";import{adjustCanvas as k}from"../../libs/dom/index.js";import{scale2dSizeToFit as E}from"../../libs/math.js";import{generateSpriteAnimationStates as W}from"../../libs/sprite.js";import{resolveBaseImportUrl as r}from"../../libs/urls.js";import"../../libs/class-names.js";import"../../libs/cleanup.js";const j=await M({assetsInfo:[{type:"image",src:r("#games/collision-animations-from-a-sprite-sheet/assets/images/boom.png")},{type:"audio",src:r("#assets/audios/Magic SFX Preview Pack/Fire impact 1.wav")},{type:"audio",src:r("#assets/audios/Magic SFX Preview Pack/Healing Full.wav")},{type:"audio",src:r("#assets/audios/Magic SFX Preview Pack/Ice attack 2.wav")},{type:"audio",src:r("#assets/audios/Magic SFX Preview Pack/Misc 02.wav")},{type:"audio",src:r("#assets/audios/Magic SFX Preview Pack/Wind effects 5.wav")}],cb:({appId:y,assets:F,cleanupManager:h,createLayout:X})=>{const l=`${y}-canvas`,[d,...u]=F,w=5,f=d.naturalWidth/w,p=d.naturalHeight,I=W([{name:"default",frames:w}],{width:f,height:p}),s={render:{width:500,height:700},dom:{x:0,y:0}};X(`<canvas
			id="${l}"
			width="${s.render.width}"
			height="${s.render.height}"
			class="border border-solid border-gray-300 dark:border-gray-700 mx-auto max-w-full w-5xl"
		></canvas>`);const a=document.getElementById(l);if(!a)throw new Error("Couldn't find the canvas!");const e=a.getContext("2d");if(!e)throw new Error("Couldn't get the canvas context!");const P=k({canvas:a,ctx:e,onUpdateCanvasSize:i=>{s.dom=i}});h.register(P);let S=0;class A{constructor(t){this.x=t.x,this.y=t.y;const o=E({containerWidth:t.sprite.renderBaseWidth,containerHeight:t.sprite.renderBaseHeight,sourceWidth:t.sprite.width,sourceHeight:t.sprite.height});this.sprite={animationStates:t.sprite.animationStates,currentAnimationState:t.sprite.currentAnimationState,img:t.sprite.img,currentFrameX:0,currentFrameY:0,width:t.sprite.width,height:t.sprite.height},this.width=o.width,this.height=o.height,this.speedModifier=8,this.angle=Math.random()*Math.PI*2,this.sfx=t.sfx}draw(){e.save(),e.translate(this.x+this.width*.5,this.y+this.height*.5),e.rotate(this.angle),e.drawImage(this.sprite.img,this.sprite.width*this.sprite.currentFrameX,this.sprite.height*this.sprite.currentFrameY,this.sprite.width,this.sprite.height,0-this.width*.5,0-this.height*.5,this.width,this.height),e.restore()}update(){const t=this.sprite.animationStates[this.sprite.currentAnimationState];this.sprite.currentFrameX===0&&this.sfx.play(),S%this.speedModifier===0&&(this.sprite.currentFrameX=this.sprite.currentFrameX>=t.size-1?0:this.sprite.currentFrameX+1)}}const c=new Set;function v(i){e.fillStyle="white";const o=i.pageX-s.dom.x,C=i.pageY-s.dom.y,n=new A({x:o,y:C,sprite:{animationStates:I,currentAnimationState:"default",img:d,renderBaseWidth:100,width:f,height:p},sfx:u[Math.floor(Math.random()*u.length)]});c.add(n),n.x-=n.width*.5,n.y-=n.height*.5}h.registerEventListener({elem:a,type:"mousemove",listener:v}),h.registerEventListener({elem:a,type:"click",listener:v});let m;setTimeout(()=>{e.fillStyle="red",e.fillRect(0,0,s.render.width,s.render.height)},1e3);let g=0;function x(){e.clearRect(0,0,s.render.width,s.render.height),g=(g+1)%360,e.fillStyle=`hsl(${g}, 100%, 50%)`,e.fillRect(0,0,s.render.width,s.render.height),c.forEach(i=>{i&&(i.update(),i.draw(),i.sprite.currentFrameX>=i.sprite.animationStates[i.sprite.currentAnimationState].size-1&&c.delete(i))}),S++,m=requestAnimationFrame(x)}h.register(()=>{m&&cancelAnimationFrame(m)}),x()}});export{j as default};
