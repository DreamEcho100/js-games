import k from"../../libs/core/dom.js";import{adjustCanvas as b}from"../../libs/dom/index.js";import"../../libs/class-names.js";import"../../libs/cleanup.js";import"../../libs/math.js";class F{constructor(t){this.tileFrom=[1,1],this.tileTo=[1,1],this.position=[45,45],this.dimensions=[30,30],this.timeMoved=0,this.delayMove=300,this.directionKeyMap={up:"ArrowUp",right:"ArrowRight",down:"ArrowDown",left:"ArrowLeft"},this.KeysCollection=Object.values(this.directionKeyMap),this.keyDirectionMap=Object.fromEntries(Object.entries(this.directionKeyMap).map(e=>[e[1],[e[0],!1]])),t.registerEvents({keydownCb:e=>{e.key in this.keyDirectionMap&&(this.keyDirectionMap[e.key][1]=!0)},keyupCb:e=>{e.key in this.keyDirectionMap&&(this.keyDirectionMap[e.key][1]=!1)}})}placeAt(t,e,i){this.tileFrom=[e,i],this.tileTo=[e,i],this.position=[Math.floor(e*t.w+(t.w-this.dimensions[0])*.5),Math.floor(i*t.h+(t.h-this.dimensions[1])*.5)]}processMovement(t,e){if(this.tileFrom[0]===this.tileTo[0]&&this.tileFrom[1]===this.tileTo[1])return!1;const i=e-this.timeMoved;if(i>=this.delayMove)this.placeAt(t,this.tileTo[0],this.tileTo[1]);else{const s=i/this.delayMove;if(this.tileTo[0]!==this.tileFrom[0]){const o=(this.tileTo[0]-this.tileFrom[0])*s;this.position[0]=Math.floor((this.tileFrom[0]+o)*t.w+(t.w-this.dimensions[0])*.5)}if(this.tileTo[1]!==this.tileFrom[1]){const o=(this.tileTo[1]-this.tileFrom[1])*s;this.position[1]=Math.floor((this.tileFrom[1]+o)*t.h+(t.h-this.dimensions[1])*.5)}}return!0}toMapIndex(t,e,i){return i*t.w+e}update(t,e,i,s,r,o){if(!this.processMovement(t,o))for(const a of this.KeysCollection){const[f,w]=this.keyDirectionMap[a];if(!w)continue;let n=!1;switch(f){case"up":this.canMoveUp(e,i,s,r)&&(this.tileTo[1]-=1,n=!0);break;case"down":this.canMoveDown(e,i,s,r)&&(this.tileTo[1]+=1,n=!0);break;case"left":this.canMoveLeft(e,i,s,r)&&(this.tileTo[0]-=1,n=!0);break;case"right":this.canMoveRight(e,i,s,r)&&(this.tileTo[0]+=1,n=!0);break}if(n){this.timeMoved=o;break}}}draw(t,e=[0,0]){t.fillStyle="#0000ff",t.fillRect(e[0]+this.position[0],e[1]+this.position[1],this.dimensions[0],this.dimensions[1])}canMoveTo(t,e,i,s,r,o){return!(r<0||r>=t.w||o<0||o>=t.h||i[e[this.toMapIndex(t,r,o)]].floor!==s.path)}canMoveUp(t,e,i,s){return this.canMoveTo(t,e,i,s,this.tileFrom[0],this.tileFrom[1]-1)}canMoveDown(t,e,i,s){return this.canMoveTo(t,e,i,s,this.tileFrom[0],this.tileFrom[1]+1)}canMoveLeft(t,e,i,s){return this.canMoveTo(t,e,i,s,this.tileFrom[0]-1,this.tileFrom[1])}canMoveRight(t,e,i,s){return this.canMoveTo(t,e,i,s,this.tileFrom[0]+1,this.tileFrom[1])}}class D{constructor(t){this.screen=t.screen,this.startTile=[0,0],this.endTile=[0,0],this.offset=[0,0]}update(t,e,i,s){this.offset[0]=Math.floor(this.screen[0]*.5-i),this.offset[1]=Math.floor(this.screen[1]*.5-s);const r=[Math.floor(i/t.w),Math.floor(s/t.h)];this.startTile[0]=r[0]-1-Math.ceil(this.screen[0]*.5/t.w),this.startTile[1]=r[1]-1-Math.ceil(this.screen[1]*.5/t.h),this.startTile[0]<0&&(this.startTile[0]=0),this.startTile[1]<0&&(this.startTile[1]=0),this.endTile[0]=r[0]+1+Math.ceil(this.screen[0]*.5/t.w),this.endTile[1]=r[1]+1+Math.ceil(this.screen[1]*.5/t.h),this.endTile[0]>=e.w&&(this.endTile[0]=e.w),this.endTile[1]>=e.h&&(this.endTile[1]=e.h)}draw(t,e,i,s,r){for(let o=this.startTile[1];o<=this.endTile[1];o++)for(let h=this.startTile[0];h<=this.endTile[0];h++){const a=r[s[o*i.w+h]];a&&(t.fillStyle=a.color,t.fillRect(Math.floor(this.offset[0]+h*e.w),Math.floor(this.offset[1]+o*e.h),e.w+.9,e.h+.9))}}}const L=await k({cb:async({appId:u,cleanupManager:t,createLayout:e})=>{const i=`${u}-canvas`,s={render:{width:400,height:400},dom:{}};await e(`<small class='block text-center'><em>In Progress</em></small><canvas
				id="${i}"
				width="${s.render.width}"
				height="${s.render.height}"
				class="border border-solid border-gray-300 dark:border-gray-700 mx-auto max-w-full w-5xl"
			></canvas>`);const r=document.getElementById(i);if(!r)throw new Error("Couldn't find the canvas!");r.style.imageRendering="pixelated";const o=r.getContext("2d");if(!o)throw new Error("Couldn't get the canvas context!");o.imageSmoothingEnabled=!1,o.imageSmoothingQuality="low";const h=b({canvas:r,ctx:o,onUpdateCanvasSize:d=>{s.dom=d}});t.register(h),o.imageSmoothingEnabled=!1;let a=0,f=0,w=0;const n=[0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,0,0,2,3,4,4,1,1,1,1,1,1,1,1,1,1,1,0,2,2,0,0,2,3,1,4,4,1,1,2,2,2,2,1,1,2,2,2,2,2,0,0,2,3,1,1,4,4,1,2,3,3,2,1,1,2,1,0,0,0,0,0,2,2,2,2,2,2,2,2,3,3,2,2,2,2,1,1,1,1,0,0,1,1,1,1,2,4,1,1,1,1,1,1,1,2,1,1,1,1,0,0,1,1,1,1,2,4,1,1,1,1,1,1,1,2,1,1,1,1,0,0,1,1,1,1,2,4,4,4,4,4,1,1,1,2,2,2,2,1,0,0,1,1,1,1,2,3,2,1,1,4,1,1,1,1,3,3,2,1,0,0,1,2,2,2,2,1,2,1,1,4,1,1,1,1,1,3,2,1,0,0,1,2,3,3,2,1,2,1,1,4,4,4,4,4,4,4,2,4,4,0,1,2,3,3,2,1,2,1,1,1,1,1,1,1,1,1,2,1,0,0,1,2,3,4,2,2,2,1,1,1,1,1,1,1,0,1,2,1,0,0,3,2,3,4,4,1,2,2,2,2,2,2,2,1,0,1,2,1,0,0,3,2,3,4,4,3,2,1,1,1,1,1,2,1,1,1,2,3,0,0,3,2,3,4,1,3,2,1,3,1,1,1,2,1,1,1,2,3,0,0,1,2,2,2,2,2,2,3,3,3,1,1,2,2,2,2,2,3,0,0,1,1,1,1,1,1,3,3,3,3,3,1,1,1,1,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],l={solid:0,path:1,water:2},T={0:{color:"#685b48",floor:l.solid},1:{color:"#5aa457",floor:l.path},2:{color:"#e8bd7a",floor:l.path},3:{color:"#286625",floor:l.solid},4:{color:"#678fd9",floor:l.water}},M={w:40,h:40},v={w:20,h:20},c=new F({registerEvents:d=>{t.registerWindowEventListener({type:"keyup",listener:d.keyupCb}),t.registerWindowEventListener({type:"keydown",listener:d.keydownCb})},tile:M});o.font="bold 10pt sans-serif";const m=new D({screen:[s.render.width,s.render.height]});let p;function g(){o.clearRect(0,0,s.render.width,s.render.height);const d=Date.now(),y=Math.floor(Date.now()*.001);y!==a?(a=y,w=f,f=1):f++,c.update(M,v,n,T,l,d),m.update(M,v,c.position[0]+c.dimensions[0]/2,c.position[1]+c.dimensions[1]/2),o.fillStyle="#000000",o.fillRect(0,0,m.screen[0],m.screen[1]),m.draw(o,M,v,n,T,l),c.draw(o,m.offset),o.fillStyle="#ff0000",o.fillText(`FPS: ${w}`,10,20),p=requestAnimationFrame(g)}t.register(()=>{p&&cancelAnimationFrame(p)}),g()}});export{L as default};
