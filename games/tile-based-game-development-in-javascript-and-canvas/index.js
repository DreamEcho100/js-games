import v from"../../libs/core/dom.js";import{adjustCanvas as g}from"../../libs/dom/index.js";import"../../libs/class-names.js";import"../../libs/cleanup.js";import"../../libs/math.js";class k{constructor(t){this.tileFrom=[1,1],this.tileTo=[1,1],this.position=[45,45],this.dimensions=[30,30],this.timeMoved=0,this.delayMove=300,this.directionKeyMap={up:"ArrowUp",right:"ArrowRight",down:"ArrowDown",left:"ArrowLeft"},this.KeysCollection=Object.values(this.directionKeyMap),this.keyDirectionMap=Object.fromEntries(Object.entries(this.directionKeyMap).map(e=>[e[1],[e[0],!1]])),t.registerEvents({keydownCb:e=>{e.key in this.keyDirectionMap&&(this.keyDirectionMap[e.key][1]=!0)},keyupCb:e=>{e.key in this.keyDirectionMap&&(this.keyDirectionMap[e.key][1]=!1)}})}placeAt(t,e,s){this.tileFrom=[e,s],this.tileTo=[e,s],this.position=[e*t.w+(t.w-this.dimensions[0])*.5,s*t.h+(t.h-this.dimensions[1])*.5]}processMovement(t,e){if(this.tileFrom[0]===this.tileTo[0]&&this.tileFrom[1]===this.tileTo[1])return!1;const s=e-this.timeMoved;if(s>=this.delayMove)this.placeAt(t,this.tileTo[0],this.tileTo[1]);else{const o=s/this.delayMove;if(this.tileTo[0]!==this.tileFrom[0]){const i=(this.tileTo[0]-this.tileFrom[0])*o;this.position[0]=Math.floor((this.tileFrom[0]+i)*t.w+(t.w-this.dimensions[0])*.5)}if(this.tileTo[1]!==this.tileFrom[1]){const i=(this.tileTo[1]-this.tileFrom[1])*o;this.position[1]=Math.floor((this.tileFrom[1]+i)*t.h+(t.h-this.dimensions[1])*.5)}}return!0}toMapIndex(t,e,s){return s*t.w+e}update(t,e,s,o){if(!this.processMovement(t,o))for(const i of this.KeysCollection){const[m,c]=this.keyDirectionMap[i];if(!c)continue;let n=!1;switch(m){case"up":this.tileFrom[1]>0&&s[this.toMapIndex(e,this.tileFrom[0],this.tileFrom[1]-1)]==1&&(this.tileTo[1]-=1,n=!0);break;case"down":this.tileFrom[1]<e.h-1&&s[this.toMapIndex(e,this.tileFrom[0],this.tileFrom[1]+1)]==1&&(this.tileTo[1]+=1,n=!0);break;case"left":this.tileFrom[0]>0&&s[this.toMapIndex(e,this.tileFrom[0]-1,this.tileFrom[1])]==1&&(this.tileTo[0]-=1,n=!0);break;case"right":this.tileFrom[0]<e.w-1&&s[this.toMapIndex(e,this.tileFrom[0]+1,this.tileFrom[1])]==1&&(this.tileTo[0]+=1,n=!0);break}if(n){this.timeMoved=o;break}}}draw(t,e=[0,0]){t.fillStyle="#0000ff",t.fillRect(e[0]+this.position[0],e[1]+this.position[1],this.dimensions[0],this.dimensions[1])}}class F{constructor(t){this.screen=t.screen,this.startTile=[0,0],this.endTile=[0,0],this.offset=[0,0]}update(t,e,s,o){this.offset[0]=Math.floor(this.screen[0]*.5-s),this.offset[1]=Math.floor(this.screen[1]*.5-o);const r=[Math.floor(s/t.w),Math.floor(o/t.h)];this.startTile[0]=r[0]-1-Math.ceil(this.screen[0]*.5/t.w),this.startTile[1]=r[1]-1-Math.ceil(this.screen[1]*.5/t.h),this.startTile[0]<0&&(this.startTile[0]=0),this.startTile[1]<0&&(this.startTile[1]=0),this.endTile[0]=r[0]+1+Math.ceil(this.screen[0]*.5/t.w),this.endTile[1]=r[1]+1+Math.ceil(this.screen[1]*.5/t.h),this.endTile[0]>=e.w&&(this.endTile[0]=e.w),this.endTile[1]>=e.h&&(this.endTile[1]=e.h)}draw(t,e,s,o){for(let r=this.startTile[1];r<=this.endTile[1];r++)for(let i=this.startTile[0];i<=this.endTile[0];i++){switch(o[r*s.w+i]){case 0:t.fillStyle="#999999";break;default:t.fillStyle="#eeeeee";break}t.strokeStyle=t.fillStyle,t.lineWidth=1,t.fillRect(Math.floor(this.offset[0]+i*e.w),Math.floor(this.offset[1]+r*e.h),e.w+1,e.h+1)}}}const I=await v({cb:async({appId:f,cleanupManager:t,createLayout:e})=>{const s=`${f}-canvas`,o={render:{width:400,height:400},dom:{}};await e(`<small class='block text-center'><em>In Progress</em></small><canvas
				id="${s}"
				width="${o.render.width}"
				height="${o.render.height}"
				class="border border-solid border-gray-300 dark:border-gray-700 mx-auto max-w-full w-5xl"
			></canvas>`);const r=document.getElementById(s);if(!r)throw new Error("Couldn't find the canvas!");r.style.imageRendering="pixelated";const i=r.getContext("2d");if(!i)throw new Error("Couldn't get the canvas context!");i.imageSmoothingEnabled=!1,i.imageSmoothingQuality=!1;const m=g({canvas:r,ctx:i,onUpdateCanvasSize:l=>{o.dom=l}});t.register(m),i.imageSmoothingEnabled=!1;let c=0,n=0,y=0;const u=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,0,0,1,0,0,0,0,1,1,1,0,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,0,1,0,1,0,0,0,1,1,0,1,1,1,0,1,0,1,1,1,0,0,1,0,1,0,1,0,0,1,0,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,1,0,0,1,0,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,0,0,1,0,1,1,1,1,1,1,1,0,1,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],d={w:40,h:40},w={w:20,h:20},h=new k({registerEvents:l=>{t.registerWindowEventListener({type:"keyup",listener:l.keyupCb}),t.registerWindowEventListener({type:"keydown",listener:l.keydownCb})},tile:d});i.font="bold 10pt sans-serif";const a=new F({screen:[o.render.width,o.render.height]});let p;function T(){i.clearRect(0,0,o.render.width,o.render.height);const l=Date.now(),M=Math.floor(Date.now()*.001);M!==c?(c=M,y=n,n=1):n++,h.update(d,w,u,l),a.update(d,w,h.position[0]+h.dimensions[0]/2,h.position[1]+h.dimensions[1]/2),i.fillStyle="#000000",i.fillRect(0,0,a.screen[0],a.screen[1]),a.draw(i,d,w,u),h.draw(i,a.offset),i.fillStyle="#ff0000",i.fillText(`FPS: ${y}`,10,20),p=requestAnimationFrame(T)}t.register(()=>{p&&cancelAnimationFrame(p)}),T()}});export{I as default};
