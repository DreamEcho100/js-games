import{clamp as E}from"../../libs/math.js";import R from"../../libs/core/dom.js";import"../../libs/class-names.js";import"../../libs/cleanup.js";import"../../libs/dom.js";const A=await R({assetsUrls:[import.meta.resolve("./backgroundLayers/layer-1.png",new URL(import.meta.url)),import.meta.resolve("./backgroundLayers/layer-2.png",new URL(import.meta.url)),import.meta.resolve("./backgroundLayers/layer-3.png",new URL(import.meta.url)),import.meta.resolve("./backgroundLayers/layer-4.png",new URL(import.meta.url)),import.meta.resolve("./backgroundLayers/layer-5.png",new URL(import.meta.url))],cb:({appId:s,assets:w,cleanUpManager:d,createLayout:y})=>{const m=`canvas-${s}`,l=1,c=20;let e=5;const h=`showGameSpeed-${s}`,p=`gameSpeed-${s}`,r={width:800,height:700};y(`<canvas
				id="${m}"
				width="${r.width}"
				height="${r.height}"
				class="border-2 border-solid border-gray-300 dark:border-gray-700 max-w-full mx-auto"
			></canvas>
			<div class="flex flex-col gap-4">
				<label>Game speed: <span id="${h}">${e}</span></label>
				<input type="range" id="${p}" min="${l}" max="${c}" value="${e}" />
			</div>`);const v=document.getElementById(h),b=document.getElementById(p);d.registerEventListener({elem:b,type:"input",listener:a=>{e=E(Number(a.target.value),l,c),v.innerText=e.toString()}});const g=document.getElementById(m);if(!g)throw new Error("Couldn't find the canvas element!");const i=g.getContext("2d");if(!i)throw new Error("Couldn't get the canvas context!");const[f,x,L,S,$]=w;class t{constructor(n,k){this.x1=0,this.y=0,this.width=n.naturalWidth,this.height=n.naturalHeight,this.img=n,this.speedModifier=k,this.speed=e*this.speedModifier}update(){this.speed=e*this.speedModifier,this.x1<=-this.width&&(this.x1=0),this.x1=Math.floor(this.x1-this.speed)}draw(){i.drawImage(this.img,this.x1,0),i.drawImage(this.img,this.x1+this.width,0)}}const I=[new t(f,.2),new t(x,.4),new t(L,.6),new t(S,.8),new t($,1)];let o;function u(){i.clearRect(0,0,r.width,r.height);for(const a of I)a.update(),a.draw();o=requestAnimationFrame(u)}d.register(()=>{o&&cancelAnimationFrame(o)}),u()}});export{A as default};
