import F from"../../libs/core/dom.js";import{adjustCanvas as P}from"../../libs/dom.js";import{scale2dSizeToFit as X}from"../../libs/math.js";import{generateSpriteAnimationStates as w}from"../../libs/sprite.js";import{resolveBaseImportUrl as a}from"../../libs/urls.js";import"../../libs/class-names.js";import"../../libs/cleanup.js";const W=await F({assetsInfo:[{type:"image",src:import.meta.resolve("./assets/images/raven.png",new URL(import.meta.url))},{type:"image",src:a("#games/collision-animations-from-a-sprite-sheet/assets/images/boom.png")},{type:"audio",src:a("#assets/audios/Magic SFX Preview Pack/Fire impact 1.wav")},{type:"audio",src:a("#assets/audios/Magic SFX Preview Pack/Healing Full.wav")},{type:"audio",src:a("#assets/audios/Magic SFX Preview Pack/Ice attack 2.wav")},{type:"audio",src:a("#assets/audios/Magic SFX Preview Pack/Misc 02.wav")},{type:"audio",src:a("#assets/audios/Magic SFX Preview Pack/Wind effects 5.wav")}],cb:({assets:p,cleanUpManager:d,createLayout:v})=>{const[r,m,...f]=p,s={framesX:6,width:r.naturalWidth/6,height:r.naturalHeight},x=w([{name:"default",frames:s.framesX}],{width:s.width,height:s.height}),h={framesX:5,width:m.naturalWidth/5,height:m.naturalHeight};w([{name:"default",frames:h.framesX}],{width:h.width,height:h.height});let i={width:500,height:700};v(`<small class='block text-center'><em>In Progress</em></small><canvas
			id="vanillaJavascriptSpriteAnimationTechniques"
			width="${i.width}"
			height="${i.height}"
			class="border border-solid border-gray-300 dark:border-gray-700 max-w-full mx-auto"
		></canvas>`);const n=document.getElementById("vanillaJavascriptSpriteAnimationTechniques");if(!n)throw new Error("Couldn't find the canvas!");const e=n.getContext("2d");if(!e)throw new Error("Couldn't get the canvas context!");const S=P({canvas:n,ctx:e,onUpdateCanvasSize:l=>{i=l}});d.register(S);class y{constructor(t){const u=X({containerWidth:t.sprite.renderBaseWidth,containerHeight:t.sprite.renderBaseHeight,sourceWidth:t.sprite.width,sourceHeight:t.sprite.height});this.sprite={animationStates:t.sprite.animationStates,currentAnimationState:t.sprite.currentAnimationState,img:t.sprite.img,currentFrameX:0,currentFrameY:0,width:t.sprite.width,height:t.sprite.height},this.width=u.width,this.height=u.height,this.x=i.width,this.y=0,this.dx=Math.random()*5+3,this.dy=Math.random()*5-2.5}draw(){e.fillStyle="black",e.strokeRect(this.x,this.y,this.width,this.height),e.drawImage(this.sprite.img,this.sprite.currentFrameX*this.sprite.width,this.sprite.currentFrameY*this.sprite.height,this.sprite.width,this.sprite.height,this.x,this.y,this.width,this.height),this.x<-this.width&&(this.x=i.width),(this.y<0||this.y>i.height-this.height)&&(this.dy*=-1)}update(){this.x-=this.dx}}const c=new y({x:0,y:0,sprite:{img:r,animationStates:x,currentAnimationState:"default",renderBaseWidth:150,width:s.width,height:s.height},sfx:f[0]});let o;function g(){e.clearRect(0,0,i.width,i.height),c.draw(),c.update(),o=requestAnimationFrame(g)}d.register(()=>{o&&cancelAnimationFrame(o)}),g()}});export{W as default};
