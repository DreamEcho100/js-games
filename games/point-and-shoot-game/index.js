import X from"../../libs/core/dom.js";import{adjustCanvas as k}from"../../libs/dom.js";import{scale2dSizeToFit as I}from"../../libs/math.js";import{generateSpriteAnimationStates as f}from"../../libs/sprite.js";import{resolveBaseImportUrl as a}from"../../libs/urls.js";import"../../libs/class-names.js";import"../../libs/cleanup.js";const $=await X({assetsInfo:[{type:"image",src:import.meta.resolve("./assets/images/raven.png",new URL(import.meta.url))},{type:"image",src:a("#games/collision-animations-from-a-sprite-sheet/assets/images/boom.png")},{type:"audio",src:a("#assets/audios/Magic SFX Preview Pack/Fire impact 1.wav")},{type:"audio",src:a("#assets/audios/Magic SFX Preview Pack/Healing Full.wav")},{type:"audio",src:a("#assets/audios/Magic SFX Preview Pack/Ice attack 2.wav")},{type:"audio",src:a("#assets/audios/Magic SFX Preview Pack/Misc 02.wav")},{type:"audio",src:a("#assets/audios/Magic SFX Preview Pack/Wind effects 5.wav")}],cb:({appId:p,assets:v,cleanUpManager:m,createLayout:x})=>{const c=`${p}-canvas`,[h,g,...y]=v,s={framesX:6,width:h.naturalWidth/6,height:h.naturalHeight},S=f([{name:"default",frames:s.framesX}],{width:s.width,height:s.height}),n={framesX:5,width:g.naturalWidth/5,height:g.naturalHeight};f([{name:"default",frames:n.framesX}],{width:n.width,height:n.height});const t={render:{width:500,height:700},dom:{}};x(`<small class='block text-center'><em>In Progress</em></small><canvas
			id="${c}"
			width="${t.render.width}"
			height="${t.render.height}"
			class="border border-solid border-gray-300 dark:border-gray-700 mx-auto max-w-full w-5xl"
		></canvas>`);const d=document.getElementById(c);if(!d)throw new Error("Couldn't find the canvas!");const i=d.getContext("2d");if(!i)throw new Error("Couldn't get the canvas context!");const F=k({canvas:d,ctx:i,onUpdateCanvasSize:r=>{t.dom=r,t.render.width=r.width,t.render.height=r.height}});m.register(F);class P{constructor(e){const u=I({containerWidth:e.sprite.renderBaseWidth,containerHeight:e.sprite.renderBaseHeight,sourceWidth:e.sprite.width,sourceHeight:e.sprite.height});this.sprite={animationStates:e.sprite.animationStates,currentAnimationState:e.sprite.currentAnimationState,img:e.sprite.img,currentFrameX:0,currentFrameY:0,width:e.sprite.width,height:e.sprite.height},this.width=u.width,this.height=u.height,this.x=t.render.width,this.y=0,this.dx=Math.random()*5+3,this.dy=Math.random()*5-2.5}draw(){i.fillStyle="black",i.strokeRect(this.x,this.y,this.width,this.height),i.drawImage(this.sprite.img,this.sprite.currentFrameX*this.sprite.width,this.sprite.currentFrameY*this.sprite.height,this.sprite.width,this.sprite.height,this.x,this.y,this.width,this.height),this.x<-this.width&&(this.x=t.render.width),(this.y<0||this.y>t.render.height-this.height)&&(this.dy*=-1)}update(){this.x-=this.dx}}const w=new P({x:0,y:0,sprite:{img:h,animationStates:S,currentAnimationState:"default",renderBaseWidth:150,width:s.width,height:s.height},sfx:y[0]});let o;function l(){i.clearRect(0,0,t.render.width,t.render.height),w.draw(),w.update(),o=requestAnimationFrame(l)}m.register(()=>{o&&cancelAnimationFrame(o)}),l()}});export{$ as default};
