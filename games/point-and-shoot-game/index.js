import Y from"../../libs/core/dom.js";import{adjustCanvas as z}from"../../libs/dom.js";import{scale2dSizeToFit as b}from"../../libs/math.js";import{generateSpriteAnimationStates as A}from"../../libs/sprite.js";import{resolveBaseImportUrl as C}from"../../libs/urls.js";import"../../libs/class-names.js";import"../../libs/cleanup.js";function O(){const h=document.createElement("canvas");h.width=h.height=1;const o=h.getContext("2d");if(!o)throw new Error("Couldn't get the canvas context!");o.fillStyle="rgb(255, 0, 0)",o.fillRect(0,0,1,1);const n=o.getImageData(0,0,1,1).data;return!(n[0]===255&&n[1]===0&&n[2]===0&&n[3]===255)}const N=await Y({assetsInfo:[{type:"image",src:import.meta.resolve("./assets/images/raven.png",new URL(import.meta.url))},{type:"image",src:C("#games/collision-animations-from-a-sprite-sheet/assets/images/boom.png")},{type:"audio",src:C("#assets/audios/Magic SFX Preview Pack/Ice attack 2.wav")}],stylesheetLink:import.meta.resolve("./assets/styles/index.css",new URL(import.meta.url)),cb:({appId:h,assets:o,cleanUpManager:n,createLayout:$})=>{const I=`${h}-canvas`,M=`${h}-canvas2`,[w,u,k]=o,d={framesX:6,width:w.naturalWidth/6,height:w.naturalHeight},H=A([{name:"default",frames:d.framesX}],{width:d.width,height:d.height}),l={framesX:5,width:u.naturalWidth/5,height:u.naturalHeight},P=A([{name:"default",frames:l.framesX}],{width:l.width,height:l.height}),e={render:{width:500,height:700},dom:{x:0,y:0}};$(`<small class='block text-center'><em>In Progress</em></small>
			<div class=" mx-auto max-w-full w-fit relative">
			<canvas
			id="${I}"
			width="${e.render.width}"
			height="${e.render.height}"
			class="border border-solid border-gray-300 dark:border-gray-700 max-w-full"
			></canvas>
			<canvas
				id="${M}"
				width="${e.render.width}"
				height="${e.render.height}"
				class="border border-solid border-gray-300 dark:border-gray-700 max-w-full absolute top-0 left-0 opacity-0"
			></canvas>
			</div>
		`);const x=document.getElementById(I);if(!x)throw new Error("Couldn't find the canvas!");const i=x.getContext("2d");if(!i)throw new Error("Couldn't get the canvas context!");const c=document.getElementById(M);if(!c)throw new Error("Couldn't find the canvas!");const m=c.getContext("2d",{willReadFrequently:!0});if(!m)throw new Error("Couldn't get the canvas context!");const B=z({canvas:x,ctx:i,onUpdateCanvasSize:r=>{e.dom=r,e.render.width=r.width,e.render.height=r.height,c.width=e.render.width,c.height=e.render.height}});n.register(B);let p=0,v=0,g=3;n.registerEventListener({elem:c,type:"click",listener:r=>{const t=r.pageX-e.dom.x,a=r.pageY-e.dom.y,S=m.getImageData(t,a,1,1);for(const s of f)if(s.color[0]===S.data[0]&&s.color[1]===S.data[1]&&s.color[2]===S.data[2]){v++,s.sfx.currentTime=0,s.sfx.play(),s.explosion.x=s.x,s.explosion.y=s.y,s.explosion.sprite.currentFrameX=0,s.explosion.frameInterval=4,s.resetPosition(),s.isHit=!0;break}}});function E(){i.fillStyle="white",i.font="14px Impact",i.fillText(`Score: ${v}`,7,21),i.fillStyle="black",i.font="14px Impact",i.fillText(`Score: ${v}`,5,20)}function R(){i.fillStyle="white",i.font="14px Impact",i.fillText(`Lives: ${g}`,7,41),i.fillStyle="black",i.font="14px Impact",i.fillText(`Lives: ${g}`,5,40)}function W(){i.fillStyle="white",i.font="24px Impact",i.textAlign="center",i.textBaseline="middle",i.fillText("Game Over",e.render.width*.5,e.render.height*.5),i.fillStyle="black",i.font="24px Impact",i.fillText("Game Over",e.render.width*.5-1,e.render.height*.5-1)}class T{constructor(t){const a=b({containerWidth:t.sprite.renderBaseWidth,containerHeight:t.sprite.renderBaseHeight,sourceWidth:t.sprite.width,sourceHeight:t.sprite.height});this.sprite={animationStates:t.sprite.animationStates,currentAnimationState:t.sprite.currentAnimationState,img:t.sprite.img,currentFrameX:0,currentFrameY:0,width:t.sprite.width,height:t.sprite.height},this.width=a.width,this.height=a.height,this.x=t.x,this.y=t.y,this.frameInterval=0}draw(){i.drawImage(this.sprite.img,this.sprite.currentFrameX*this.sprite.width,this.sprite.currentFrameY*this.sprite.height,this.sprite.width,this.sprite.height,this.x-this.width*.5,this.y-this.height*.5,this.width*2,this.height*2)}update(){const t=this.sprite.animationStates[this.sprite.currentAnimationState];if(p%this.frameInterval===0){if(this.sprite.currentFrameX>=t.size-1)return;this.sprite.currentFrameX=this.sprite.currentFrameX>=t.size-1?0:this.sprite.currentFrameX+1}}}class L{constructor(t){const a=b({containerWidth:t.sprite.renderBaseWidth,containerHeight:t.sprite.renderBaseHeight,sourceWidth:t.sprite.width,sourceHeight:t.sprite.height});this.sprite={animationStates:t.sprite.animationStates,currentAnimationState:t.sprite.currentAnimationState,img:t.sprite.img,currentFrameX:0,currentFrameY:0,width:t.sprite.width,height:t.sprite.height},this.width=a.width,this.height=a.height,this.x=t.x,this.y=t.y,this.frameInterval=0,this.dx=0,this.dy=0,this.recalculateMotionParameters(),this.color=[Math.floor(Math.random()*255),Math.floor(Math.random()*255),Math.floor(Math.random()*255)],this.sfx=t.sfx,this.isHit=!1,this.explosion=new T({x:this.x,y:this.y,sprite:{img:u,animationStates:P,currentAnimationState:"default",renderBaseWidth:this.width*.5,width:l.width,height:l.height}})}recalculateMotionParameters(){this.frameInterval=Math.floor(Math.random()*5+2.5),this.dx=Math.random()*1.24+(8-this.frameInterval)*.5,this.dy=Math.random()*1.24+(8-this.frameInterval)*.5}resetPosition(){this.x=e.render.width+e.render.width*Math.floor(Math.random()*5)+this.width*Math.floor(Math.random()*5),this.y=e.render.height*.25+Math.random()*e.render.height*.4,this.recalculateMotionParameters()}draw(){m.fillStyle=`rgba(${this.color[0]}, ${this.color[1]}, ${this.color[2]})`,m.fillRect(this.x,this.y,this.width,this.height),i.drawImage(this.sprite.img,this.sprite.currentFrameX*this.sprite.width,this.sprite.currentFrameY*this.sprite.height,this.sprite.width,this.sprite.height,this.x,this.y,this.width,this.height)}update(){if(this.x-=this.dx,this.y+=this.dy,(this.y<this.height*.1||this.y>e.render.height*.9)&&(this.dy=-this.dy),this.x+this.width<0)this.resetPosition(),this.isHit=!1,g--;else{const a=this.sprite.animationStates[this.sprite.currentAnimationState];p%this.frameInterval===0&&(this.sprite.currentFrameX=this.sprite.currentFrameX>=a.size-1?0:this.sprite.currentFrameX+1)}this.isHit&&(this.explosion.draw(),this.explosion.update(),this.explosion.sprite.currentFrameX>=4&&(this.explosion.sprite.currentFrameX=0,this.isHit=!1))}}const F=10;let f=new Array(F);for(let r=0;r<F;r++){const t=r>0?f[r-1]:null,a=new L({x:(t?.x?(t.x+e.render.width)*Math.random()+t.width:0)+e.render.width*1.5+Math.random()*e.render.width+10+(t?t.width*(Math.random()*6):0),y:e.render.height*.25+Math.random()*e.render.height*.4,sprite:{img:w,animationStates:H,currentAnimationState:"default",renderBaseWidth:80,width:d.width,height:d.height},sfx:k});a.y>e.render.height*.5?a.dy=-1*Math.random()*2-.5:a.dy=Math.random()*2-.5,f[r]=a}let y;function X(){i.clearRect(0,0,e.render.width,e.render.height),m.clearRect(0,0,e.render.width,e.render.height),E(),R();for(const r of f)r.update(),r.draw();p++,g<=0?W():y=requestAnimationFrame(X)}n.register(()=>{y&&cancelAnimationFrame(y)}),O()?alert(`⚠️ Your browser is blocking canvas pixel reads.
Please allow fingerprinting in Brave to play this game.`):X()}});export{N as default};
