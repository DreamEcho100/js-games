let f=null,r=!1;const o=new Set;function i(n){const t=new Set;function e(){return f&&t.add(f),n}function c(a){if(!Object.is(n,a)){if(n=a,r){for(const s of t)o.add(()=>s(n));return}for(const s of t)s(n)}}return[e,c]}function u(n){const t=new Set,e=()=>{for(const c of t)c();t.clear(),f=e,n(),f=null};e.onCleanup=c=>{t.add(c)},e()}function b(n){const t=i(void 0);return u(()=>{t[1](n())}),t}function l(){for(const n of o)n();o.clear()}function d(n){const t=r;r=!0;try{n()}finally{t||(r=!1,l(),r=t)}}export{b as createComputed,u as createEffect,i as createSignal,d as createSignalsBatch};
