async function i(r){return new Promise(a=>{const e=new Image;e.onload=function(n){const t=n.target;if("naturalHeight"in t&&"naturalWidth"in t&&(t.naturalHeight+t.naturalWidth===0||t.width+t.height===0)){a([new Error("Image has no dimensions"),null]);return}a([null,e])},e.onerror=function(n){const t=n instanceof Error?n.message:typeof n=="string"?n:`Error loading as image: ${r}`;a([new Error(`Failed to load image at ${r}: ${t}`),null])},e.src=r})}async function o(r){const a=await Promise.all(r.map(async n=>{const[t,l]=await i(n);return t?[new Error(`Failed to preload ${n}: ${t.message}`),null]:[null,l]})),e=new Array(a.length);for(let n=0;n<a.length;n++){const[t,l]=a[n];if(t)return[t,null];e[n]=l}return[null,e]}function s(r,a){const e=document.createElement("link");return e.rel="stylesheet",e.type="text/css",e.href=r,document.head.appendChild(e),a?.register(()=>{e.remove()}),e}export{s as injectStylesheetLink,i as loadImageElement,o as loadManyImageElement};
