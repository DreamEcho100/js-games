class n{cleanupItems=[];cleanup(){for(const e of this.cleanupItems)e?.();this.cleanupItems.length=0}register(e){return this.cleanupItems.push(e)}registerEventListener(e){if(!e.elem){if(e.silent)return console.error("Element is required"),()=>{console.error("Element is required")};throw new Error("Element is required")}e.elem.addEventListener(e.type,e.listener,e.options);const r=()=>{e.elem.removeEventListener(e.type,e.listener,e.options)};return this.register(r),r}registerWindowEventListener(e){window.addEventListener(e.type,e.listener,e.options);const r=()=>{window.removeEventListener(e.type,e.listener,e.options)};this.register(r)}}export{n as CleanupManager};
